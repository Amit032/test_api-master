{"ast":null,"code":"import _classCallCheck from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/roxiler/Desktop/My-Project/src/Signup/index.jsx\";\nimport React from 'react';\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport SignupForm from './SignupForm';\nimport Signin from '../Signin';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PostData from '../services/PostData';\nvar validationSchema = Yup.object({\n  firstname: Yup.string().required(\"Firstname is required\"),\n  lastname: Yup.string().required(\"Lastname is required\"),\n  username: Yup.string().required(\"Username is required\"),\n  email: Yup.string().required(\"Email is required\").email(\"Enter a valid email\"),\n  password: Yup.string().required('Password is required field').min(6, 'Password should be minmum 6 character long'),\n  confirmPassword: Yup.string().required('Confirm password is required field').oneOf([Yup.ref(\"password\")], \"Confirm password does not match with password\")\n});\nvar initialValues = {\n  firstname: '',\n  lastname: '',\n  username: \"\",\n  email: \"\",\n  password: '',\n  confirmPassword: ''\n};\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _this.handleSubmit = function (values) {\n      _this.setState({\n        firstname: values.firstname,\n        lastname: values.lastname,\n        username: values.username,\n        email: values.email,\n        password: values.password,\n        redirect: true\n      });\n\n      _this.Post.signUp(_this.state.email, _this.state.password, _this.state.username, _this.state.firstname, _this.state.lastname).then(function (res) {\n        if (res.id) {\n          _this.setState({\n            redirect: true\n          });\n        } else {\n          alert(res.error);\n        }\n      }).catch(function (err) {//alert(\"this is catch block error\");\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      firstname: '',\n      lastname: '',\n      username: '',\n      email: '',\n      password: '',\n      redirect: false\n    };\n    _this.Post = new PostData();\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        return React.createElement(BrowserRouter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: Signin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }));\n      }\n\n      var classes = this.props;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, function (_ref) {\n        var errors = _ref.errors;\n        return React.createElement(SignupForm, {\n          errors: errors,\n          classes: classes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/roxiler/Desktop/My-Project/src/Signup/index.jsx"],"names":["React","Yup","Formik","SignupForm","Signin","BrowserRouter","Route","PostData","validationSchema","object","firstname","string","required","lastname","username","email","password","min","confirmPassword","oneOf","ref","initialValues","props","handleSubmit","values","setState","redirect","Post","signUp","state","then","res","id","alert","error","catch","err","console","log","classes","container","errors","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as Yup from \"yup\"\nimport { Formik } from \"formik\";\nimport SignupForm from './SignupForm';\nimport Signin from '../Signin';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport PostData from '../services/PostData'\n\n\n\n\nconst validationSchema = Yup.object({\n    firstname: Yup.string()\n        .required(\"Firstname is required\"),\n    lastname: Yup.string()\n        .required(\"Lastname is required\"),\n    username: Yup.string()\n        .required(\"Username is required\"),\n    email: Yup.string()\n        .required(\"Email is required\")\n        .email(\"Enter a valid email\"),\n    password: Yup.string()\n        .required('Password is required field')\n        .min(6, 'Password should be minmum 6 character long'),\n    confirmPassword: Yup.string()\n        .required('Confirm password is required field')\n        .oneOf([Yup.ref(\"password\")], \"Confirm password does not match with password\")\n});\n\nconst initialValues = { firstname: '',lastname: '' , username: \"\" , email: \"\", password: '', confirmPassword: '' };\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          firstname: '',\n          lastname: '',\n          username: '',\n          email: '',\n          password: '',\n          redirect: false\n        };\n\n        this.Post = new PostData();\n\n      }\n\n    handleSubmit = (values) => {\n        this.setState({\n            firstname: values.firstname,\n            lastname: values.lastname,\n            username: values.username, \n            email: values.email, \n            password: values.password,\n            redirect: true\n        });\n\n        this.Post.signUp(this.state.email,this.state.password,this.state.username,this.state.firstname,this.state.lastname)\n            .then(res => {\n                if(res.id){\n                    this.setState({redirect: true});\n                }\n                else{\n                    alert(res.error)\n                }\n  \n            })\n            .catch(err => {\n                //alert(\"this is catch block error\");\n            })\n\n        console.log(this.state);\n    } \n\n    render() {\n\n        if(this.state.redirect){\n            return (\n                <BrowserRouter>\n                        <Route exact path='/' component={Signin} />\n                </BrowserRouter>\n            )\n        }\n\n        const classes = this.props;\n        return (\n            <div className={classes.container}>\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={this.handleSubmit}\n                >\n                    {({ errors }) => (\n                        <SignupForm \n                            errors={errors} \n                            classes={classes} \n                        />\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}