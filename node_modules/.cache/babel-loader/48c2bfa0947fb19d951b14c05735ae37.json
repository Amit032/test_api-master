{"ast":null,"code":"import _classCallCheck from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/roxiler/Desktop/My-Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/roxiler/Desktop/My-Project/src/Signin/index.jsx\";\nimport React from 'react';\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport DetailedTable from '../DetailedTable';\nimport AuthService from '../services/AuthService';\nimport SigninForm from './SigninForm';\nvar validationSchema = Yup.object({\n  email: Yup.string().required(\"Email is required\"),\n  password: Yup.string().required('Password is required field')\n});\nvar initialValues = {\n  email: \"\",\n  password: ''\n};\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _this.handleSubmit = function (values) {\n      _this.setState({\n        email: values.email,\n        password: values.password\n      });\n\n      _this.Auth.login(\"password\", _this.state.email, _this.state.password).then(function (res) {\n        if (res.access_token) {\n          _this.setState({\n            redirect: true\n          });\n        } else {\n          alert(res.error);\n        }\n      }).catch(function (err) {\n        alert(\"this is catch block error\");\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      redirect: false\n    };\n    _this.Auth = new AuthService();\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        return React.createElement(BrowserRouter, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/\",\n          component: DetailedTable,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }));\n      }\n\n      var classes = this.props;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, function (_ref) {\n        var errors = _ref.errors;\n        return React.createElement(SigninForm, {\n          errors: errors,\n          classes: classes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/roxiler/Desktop/My-Project/src/Signin/index.jsx"],"names":["React","Yup","Formik","BrowserRouter","Route","DetailedTable","AuthService","SigninForm","validationSchema","object","email","string","required","password","initialValues","props","handleSubmit","values","setState","Auth","login","state","then","res","access_token","redirect","alert","error","catch","err","console","log","classes","container","handleChange","errors","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAGA,IAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAJ,CAAW;AAChCC,EAAAA,KAAK,EAAET,GAAG,CAACU,MAAJ,GACFC,QADE,CACO,mBADP,CADyB;AAGhCC,EAAAA,QAAQ,EAAEZ,GAAG,CAACU,MAAJ,GACLC,QADK,CACI,4BADJ;AAHsB,CAAX,CAAzB;AAOA,IAAME,aAAa,GAAG;AAClBJ,EAAAA,KAAK,EAAE,EADW;AAElBG,EAAAA,QAAQ,EAAE;AAFQ,CAAtB;;;;;;;AAOI,oBAAYE,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAWnBC,YAXmB,GAWJ,UAACC,MAAD,EAAY;AACtB,YAAKC,QAAL,CAAc;AAACR,QAAAA,KAAK,EAAEO,MAAM,CAACP,KAAf;AAAsBG,QAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAAvC,OAAd;;AACA,YAAKM,IAAL,CAAUC,KAAV,CAAgB,UAAhB,EAA2B,MAAKC,KAAL,CAAWX,KAAtC,EAA4C,MAAKW,KAAL,CAAWR,QAAvD,EACIS,IADJ,CACS,UAAAC,GAAG,EAAI;AACT,YAAGA,GAAG,CAACC,YAAP,EAAoB;AAChB,gBAAKN,QAAL,CAAc;AAACO,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACH,SAFD,MAGI;AACAC,UAAAA,KAAK,CAACH,GAAG,CAACI,KAAL,CAAL;AACH;AAEJ,OATJ,EAUIC,KAVJ,CAUU,UAAAC,GAAG,EAAI;AACVH,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH,OAZJ;;AAaAI,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKV,KAAjB;AAEJ,KA5BkB;;AAEf,UAAKA,KAAL,GAAa;AACXX,MAAAA,KAAK,EAAE,EADI;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXY,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAMA,UAAKN,IAAL,GAAY,IAAIb,WAAJ,EAAZ;AARe;AAShB;;;;6BAqBM;AAEL,UAAG,KAAKe,KAAL,CAAWI,QAAd,EAAuB;AACnB,eACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ,oBAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,SAAS,EAAEpB,aAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR,CADJ;AAKH;;AACD,UAAM2B,OAAO,GAAG,KAAKjB,KAArB;AAEA,aACI;AAAK,QAAA,SAAS,EAAEiB,OAAO,CAACC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACE,QAAA,aAAa,EAAEnB,aADjB;AAEE,QAAA,gBAAgB,EAAEN,gBAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKQ,YAHjB;AAIE,QAAA,QAAQ,EAAE,KAAKkB,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMK;AAAA,YAAGC,MAAH,QAAGA,MAAH;AAAA,eACG,oBAAC,UAAD;AACI,UAAA,MAAM,EAAEA,MADZ;AAEI,UAAA,OAAO,EAAEH,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAAA,OANL,CADJ,CADJ;AAiBH;;;;EA5DwBhC,KAAK,CAACoC,S","sourcesContent":["import React from 'react';\nimport * as Yup from \"yup\"\nimport { Formik } from \"formik\";\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport DetailedTable from '../DetailedTable'\nimport AuthService from '../services/AuthService'\nimport SigninForm from './SigninForm';\n\n\nconst validationSchema = Yup.object({\n    email: Yup.string()\n        .required(\"Email is required\"),\n    password: Yup.string()\n        .required('Password is required field')\n});\n\nconst initialValues = { \n    email: \"\", \n    password: '' \n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: '',\n          password: '',\n          redirect: false\n        };\n\n        this.Auth = new AuthService();\n      }\n\n    handleSubmit = (values) => {\n         this.setState({email: values.email, password: values.password });\n         this.Auth.login(\"password\",this.state.email,this.state.password)\n            .then(res => {\n                if(res.access_token){\n                    this.setState({redirect: true});\n                }\n                else{\n                    alert(res.error)\n                }\n  \n            })\n            .catch(err => {\n                alert(\"this is catch block error\");\n            })\n         console.log(this.state);\n         \n    }\n\n    render() {\n\n        if(this.state.redirect){\n            return (\n                <BrowserRouter>\n                        <Route exact path='/' component={DetailedTable} />\n                </BrowserRouter>\n            )\n        }\n        const classes = this.props;\n        \n        return (\n            <div className={classes.container}>\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={this.handleSubmit}\n                  onChange={this.handleChange}\n                >\n                    {({ errors }) => (\n                        <SigninForm \n                            errors={errors} \n                            classes={classes} \n                        />\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}