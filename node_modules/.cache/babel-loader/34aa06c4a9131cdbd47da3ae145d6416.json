{"ast":null,"code":"import _classCallCheck from \"/home/roxiler/Desktop/formik_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/roxiler/Desktop/formik_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/roxiler/Desktop/formik_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/roxiler/Desktop/formik_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/roxiler/Desktop/formik_demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/roxiler/Desktop/formik_demo/src/Signup/index.jsx\";\nimport React from 'react';\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport SignupForm from './SignupForm';\nimport { BrowserRouter, Route } from 'react-router-dom';\nvar validationSchema = Yup.object({\n  firstname: Yup.string().required(\"Firstname is required\"),\n  lastname: Yup.string().required(\"Lastname is required\"),\n  email: Yup.string().required(\"Email is required\").email(\"Enter a valid email\"),\n  password: Yup.string().required('Password is required field').min(6, 'Password should be minmum 6 character long'),\n  confirmPassword: Yup.string().required('Confirm password is required field').oneOf([Yup.ref(\"password\")], \"Confirm password does not match with password\")\n});\nvar initialValues = {\n  firstname: '',\n  lastname: '',\n  email: \"\",\n  password: '',\n  confirmPassword: ''\n};\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n\n    _this.handleSubmit = function (values) {\n      console.log(values, 'Form Values');\n    };\n\n    _this.state = {\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, function (_ref) {\n        var errors = _ref.errors;\n        return React.createElement(SignupForm, {\n          errors: errors,\n          classes: classes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":{"version":3,"sources":["/home/roxiler/Desktop/formik_demo/src/Signup/index.jsx"],"names":["React","Yup","Formik","SignupForm","BrowserRouter","Route","validationSchema","object","firstname","string","required","lastname","email","password","min","confirmPassword","oneOf","ref","initialValues","props","handleSubmit","values","console","log","state","redirect","classes","container","errors","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAIA,IAAMC,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,CAAW;AAChCC,EAAAA,SAAS,EAAEP,GAAG,CAACQ,MAAJ,GACNC,QADM,CACG,uBADH,CADqB;AAGhCC,EAAAA,QAAQ,EAAEV,GAAG,CAACQ,MAAJ,GACLC,QADK,CACI,sBADJ,CAHsB;AAKhCE,EAAAA,KAAK,EAAEX,GAAG,CAACQ,MAAJ,GACFC,QADE,CACO,mBADP,EAEFE,KAFE,CAEI,qBAFJ,CALyB;AAQhCC,EAAAA,QAAQ,EAAEZ,GAAG,CAACQ,MAAJ,GACLC,QADK,CACI,4BADJ,EAELI,GAFK,CAED,CAFC,EAEE,4CAFF,CARsB;AAWhCC,EAAAA,eAAe,EAAEd,GAAG,CAACQ,MAAJ,GACZC,QADY,CACH,oCADG,EAEZM,KAFY,CAEN,CAACf,GAAG,CAACgB,GAAJ,CAAQ,UAAR,CAAD,CAFM,EAEiB,+CAFjB;AAXe,CAAX,CAAzB;AAgBA,IAAMC,aAAa,GAAG;AAAEV,EAAAA,SAAS,EAAE,EAAb;AAAgBG,EAAAA,QAAQ,EAAE,EAA1B;AAA8BC,EAAAA,KAAK,EAAE,EAArC;AAAyCC,EAAAA,QAAQ,EAAE,EAAnD;AAAuDE,EAAAA,eAAe,EAAE;AAAxE,CAAtB;;;;;;;AAII,oBAAYI,KAAZ,EAAmB;AAAA;;AAAA;;AACf,kFAAMA,KAAN;;AADe,UAWnBC,YAXmB,GAWJ,UAACC,MAAD,EAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoB,aAApB;AACH,KAbkB;;AAEf,UAAKG,KAAL,GAAa;AACXhB,MAAAA,SAAS,EAAE,EADA;AAEXG,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXY,MAAAA,QAAQ,EAAE;AALC,KAAb;AAFe;AAShB;;;;6BAMM;AACL,UAAMC,OAAO,GAAG,KAAKP,KAArB;AACA,aACI;AAAK,QAAA,SAAS,EAAEO,OAAO,CAACC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AACE,QAAA,aAAa,EAAET,aADjB;AAEE,QAAA,gBAAgB,EAAEZ,gBAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKc,YAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKK;AAAA,YAAGQ,MAAH,QAAGA,MAAH;AAAA,eACG,oBAAC,UAAD;AACI,UAAA,MAAM,EAAEA,MADZ;AAEI,UAAA,OAAO,EAAEF,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAAA,OALL,CADJ,CADJ;AAgBH;;;;EAnCwB1B,KAAK,CAAC6B,S","sourcesContent":["import React from 'react';\nimport * as Yup from \"yup\"\nimport { Formik } from \"formik\";\nimport SignupForm from './SignupForm';\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n\n\nconst validationSchema = Yup.object({\n    firstname: Yup.string()\n        .required(\"Firstname is required\"),\n    lastname: Yup.string()\n        .required(\"Lastname is required\"),\n    email: Yup.string()\n        .required(\"Email is required\")\n        .email(\"Enter a valid email\"),\n    password: Yup.string()\n        .required('Password is required field')\n        .min(6, 'Password should be minmum 6 character long'),\n    confirmPassword: Yup.string()\n        .required('Confirm password is required field')\n        .oneOf([Yup.ref(\"password\")], \"Confirm password does not match with password\")\n});\n\nconst initialValues = { firstname: '',lastname: '', email: \"\", password: '', confirmPassword: '' };\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          firstname: '',\n          lastname: '',\n          email: '',\n          password: '',\n          redirect: false\n        };\n      }\n\n    handleSubmit = (values) => {\n        console.log(values, 'Form Values');\n    } \n\n    render() {\n        const classes = this.props;\n        return (\n            <div className={classes.container}>\n                <Formik\n                  initialValues={initialValues}\n                  validationSchema={validationSchema}\n                  onSubmit={this.handleSubmit}\n                >\n                    {({ errors }) => (\n                        <SignupForm \n                            errors={errors} \n                            classes={classes} \n                        />\n                    )}\n                </Formik>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}